<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:system="clr-namespace:System;assembly=mscorlib">
	<!--xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">-->
	<!--Basic Brushes-->
	<Color x:Key="PrimaryColor">#FF313334</Color>
	<Color x:Key="SecondaryColor">#FFFFFFFF</Color>
	<Color x:Key="TertiaryColor">#FF1D1D1D</Color>
	<SolidColorBrush x:Key="PrimaryBrush"
					 Color="{StaticResource PrimaryColor}" />
	<SolidColorBrush x:Key="SecondaryBrush"
					 Color="{StaticResource SecondaryColor}" />
	<SolidColorBrush x:Key="TertiaryBrush"
					 Color="{StaticResource TertiaryColor}" />
	<SolidColorBrush x:Key="TextBrush"
					 Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="DisabledColor"
					 Color="#8CFFFFFF" />
	<SolidColorBrush x:Key="BackgroundBrush"
					 Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="MainBackground"
					 Color="#FF0C0C0C" />
	<SolidColorBrush x:Key="WaitingAnimationColor"
					 Color="#FF00002E" />
	<SolidColorBrush x:Key="Test" Color="#FF1D1D1D"/>
	<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
					  Color="#FF313334" />

	<Style TargetType="{x:Type MenuItem}" x:Key="MenuItemStyle" >
		<Setter Property="BorderBrush" Value="White"></Setter>
		<Setter Property="BorderThickness" Value="0,0,0,0"></Setter>
		<Setter Property="Background" Value="#FF313334"></Setter>
		<Setter Property="Foreground" Value="White"></Setter>
		<Setter Property="FontSize" Value="11"></Setter>
		<Setter Property="FontFamily" Value="Arial"></Setter>
		<Setter Property="FontWeight" Value="Bold"></Setter>
		<Setter Property="Margin" Value="-5,0,0,0"></Setter>
		<Setter Property="Padding" Value="0,12,0,12"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type MenuItem}">
					<Border x:Name="Bd" Padding="17,0,17,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Uid="Border_38">
						<ContentPresenter x:Name="ContentPresenter"  Content="{TemplateBinding Header}" Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ContentPresenter_33"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsHighlighted" Value="True">
							<Setter Property="Background" TargetName="Bd" Value="#FF0C0C0C"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="RoyalBlue"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="True">
				<Setter Property="Foreground" Value="LightGray"></Setter>
				<Setter Property="Background" Value="#FF313334"></Setter>
			</Trigger>
			<Trigger Property="IsMouseOver"  Value="True">
				<Setter Property="Foreground" Value="White"></Setter>
				<Setter Property="Background"  Value="#FF313334"></Setter>
			</Trigger>
		</Style.Triggers>

	</Style>
	<!-- Button -->
	<Style TargetType="Button">
		<Setter Property="Foreground"
				Value="{StaticResource TextBrush}" />
		<Setter Property="Background"
				Value="{StaticResource TertiaryBrush}" />
		<Setter Property="Padding"
				Value="5,4" />
		<Setter Property="BorderBrush"
				Value="{StaticResource SecondaryBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="Button_Normal">
						<Grid.RowDefinitions>
							<RowDefinition Height="50*" />
							<RowDefinition Height="50*" />
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="Focused">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Duration="00:00:00.001"
																	  Storyboard.TargetName="InnerBorder"
																	  Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
											<SplineColorKeyFrame KeyTime="0"
																 Value="#BF000000" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border CornerRadius="4"
								Grid.RowSpan="2"
								x:Name="White"
								BorderBrush="#FFFFFFFF"
								BorderThickness="1.2">
							<Border.Background>
								<RadialGradientBrush>
									<RadialGradientBrush.RelativeTransform>
										<TransformGroup>
											<ScaleTransform CenterX="0.5"
															CenterY="0.5"
															ScaleX="1.35"
															ScaleY="1.35" />
										</TransformGroup>
									</RadialGradientBrush.RelativeTransform>
									<GradientStop Color="#FFFFFFFF"
												  Offset="0" />
									<GradientStop Color="#FFFFFFFF"
												  Offset="1" />
								</RadialGradientBrush>
							</Border.Background>
						</Border>
						<Border BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="1.2"
								CornerRadius="4"
								x:Name="Background"
								Grid.RowSpan="2"
								Opacity="0.65">
							<Border.Background>
								<LinearGradientBrush EndPoint="0.5,1.4"
													 StartPoint="0.5,0">
									<GradientStop Color="{StaticResource PrimaryColor}"
												  Offset="0.75" />
									<GradientStop Color="{StaticResource SecondaryColor}"
												  Offset="1" />
								</LinearGradientBrush>
							</Border.Background>
						</Border>
						<Border Background="{TemplateBinding Background}"
								BorderBrush="#7FFFFFFF"
								BorderThickness="1"
								CornerRadius="3.5"
								x:Name="InnerBorder"
								Margin="1"
								Grid.RowSpan="2" />
						<Border CornerRadius="3.5"
								x:Name="Shadow"
								Margin="2"
								Grid.RowSpan="2">
							<Border.OpacityMask>
								<RadialGradientBrush>
									<RadialGradientBrush.RelativeTransform>
										<TransformGroup>
											<TranslateTransform X="0"
																Y="-0.5" />
										</TransformGroup>
									</RadialGradientBrush.RelativeTransform>
									<GradientStop Color="#00FFFFFF"
												  Offset="0.3" />
									<GradientStop Color="#FFFFFFFF"
												  Offset="1" />
								</RadialGradientBrush>
							</Border.OpacityMask>
						</Border>
						<ContentPresenter x:Name="contentPresenter"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  Margin="{TemplateBinding Padding}"
										  RenderTransformOrigin="0.5,0.5"
										  Grid.RowSpan="2" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
							<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource PrimaryBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- RadioButtons -->
	<Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<BulletDecorator Background="Transparent">
						<BulletDecorator.Bullet>
							<Grid Width="13" Height="13" >
								<Ellipse x:Name="Border"  
										Fill="{StaticResource TertiaryBrush}"
										StrokeThickness="1"
										Stroke="{StaticResource SecondaryBrush}" />
								<Ellipse x:Name="CheckMark"
										Margin="4"
										Fill="{StaticResource SecondaryBrush}" />
							</Grid>
						</BulletDecorator.Bullet>
						<ContentPresenter Margin="4,0,0,0"
										  VerticalAlignment="Center"
										  HorizontalAlignment="Left"
										  RecognizesAccessKey="True"/>
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="false">
							<Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="Border" Property="Fill" Value="{StaticResource PrimaryBrush}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Border" Property="Fill" Value="{StaticResource PrimaryBrush}" />
							<Setter TargetName="Border" Property="Stroke" Value="{StaticResource SecondaryBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Border" Property="Fill" Value="{StaticResource PrimaryBrush}" />
							<Setter TargetName="Border" Property="Stroke" Value="#40000000" />
							<Setter Property="Foreground" Value="#80000000"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Chart -->
	<!--Style TargetType="DVC:Chart">
		<Setter Property="PlotAreaStyle">
			<Setter.Value>
				<Style TargetType="Grid">
					<Setter Property="Background" Value="{StaticResource TertiaryBrush}" />
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="DVC:Chart">
					<Border
						Background="{StaticResource PrimaryBrush}"
						Padding="10">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							<Grid Grid.Row="1" Margin="0,15,0,15">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Grid x:Name="ChartArea" 

								 Style="{TemplateBinding ChartAreaStyle}">
									<Grid x:Name="PlotArea" 

									  Style="{TemplateBinding PlotAreaStyle}" 

									  Margin="0,0,0,0" >
										<Grid x:Name="GridLinesContainer" />
										<Grid x:Name="SeriesContainer" />
										<Border Margin="0,0,0,0" 

									  BorderBrush="{StaticResource SecondaryBrush}" 

									  BorderThickness="0,1,0,1"/>
									</Grid>
								</Grid>
							</Grid>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</>

	<Style x:Key="PolylineStyle" TargetType="Polyline">
		<Setter Property="StrokeThickness" Value="4"/>
	</>

	<Style x:Key="LineDataPointStyle" TargetType="DVC:LineDataPoint">
		<Setter Property="Background" Value="{StaticResource SecondaryBrush}" />
		<Setter Property="BorderBrush" Value="{StaticResource TertiaryBrush}"/>
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="DVC:LineDataPoint">
					<Grid x:Name="Root" Opacity="1">
						<ToolTipService.ToolTip>
							<StackPanel Margin="2,2,2,2">
								<ContentControl Content="{TemplateBinding IndependentValue}" 

											ContentStringFormat="{}{0:MMMM d, yyyy}"/>
								<ContentControl Content="{TemplateBinding DependentValue}" 

											ContentStringFormat="Power {0:###}"/>
							</StackPanel>
						</ToolTipService.ToolTip>
						<Ellipse StrokeThickness="{TemplateBinding BorderThickness}" 
								 Stroke="{TemplateBinding BorderBrush}" 
								 Fill="{TemplateBinding Background}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style-->

	<!-- DatePicker -->
	<Style x:Key="DatePickerCalendarStyle"
	   TargetType="{x:Type Calendar}"
	   BasedOn="{StaticResource {x:Type Calendar}}" />

	<!--The template for the button that displays the calendar.-->
	<Style x:Key="DropDownButtonStyle"
	   TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0" />
									<VisualTransition GeneratedDuration="0:0:0.1"
								  To="MouseOver" />
									<VisualTransition GeneratedDuration="0:0:0.1"
								  To="Pressed" />
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames BeginTime="0"
												Duration="00:00:00.001"
												Storyboard.TargetName="BackgroundGradient"
												Storyboard.TargetProperty="(Border.Background).
					(GradientBrush.GradientStops)[1].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0"
										 Value="#F2FFFFFF" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames BeginTime="0"
												Duration="00:00:00.001"
												Storyboard.TargetName="BackgroundGradient"
												Storyboard.TargetProperty="(Border.Background).
					(GradientBrush.GradientStops)[2].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0"
										 Value="#CCFFFFFF" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimation Duration="0"
								  To="#FF448DCA"
								  Storyboard.TargetProperty="(Border.Background).
							(SolidColorBrush.Color)"
								  Storyboard.TargetName="Background" />
										<ColorAnimationUsingKeyFrames BeginTime="0"
												Duration="00:00:00.001"
												Storyboard.TargetName="BackgroundGradient"
												Storyboard.TargetProperty="(Border.Background).
					(GradientBrush.GradientStops)[3].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0"
										 Value="#7FFFFFFF" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimationUsingKeyFrames BeginTime="0"
												Duration="00:00:00.001"
												Storyboard.TargetName="Background"
												Storyboard.TargetProperty="(Border.Background).
					  (SolidColorBrush.Color)">
											<SplineColorKeyFrame KeyTime="0"
										 Value="#FF448DCA" />
										</ColorAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="0"
												 Duration="00:00:00.001"
												 Storyboard.TargetProperty="(UIElement.Opacity)"
												 Storyboard.TargetName="Highlight">
											<SplineDoubleKeyFrame KeyTime="0"
										  Value="1" />
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames BeginTime="0"
												Duration="00:00:00.001"
												Storyboard.TargetName="BackgroundGradient"
												Storyboard.TargetProperty="(Border.Background).
					(GradientBrush.GradientStops)[0].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0"
										 Value="#F4FFFFFF" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames BeginTime="0"
												Duration="00:00:00.001"
												Storyboard.TargetName="BackgroundGradient"
												Storyboard.TargetProperty="(Border.Background).
					(GradientBrush.GradientStops)[1].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0"
										 Value="#EAFFFFFF" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames BeginTime="0"
												Duration="00:00:00.001"
												Storyboard.TargetName="BackgroundGradient"
												Storyboard.TargetProperty="(Border.Background).
					(GradientBrush.GradientStops)[2].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0"
										 Value="#C6FFFFFF" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames BeginTime="0"
												Duration="00:00:00.001"
												Storyboard.TargetName="BackgroundGradient"
												Storyboard.TargetProperty="(Border.Background).
					(GradientBrush.GradientStops)[3].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0"
										 Value="#6BFFFFFF" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid Background="#11FFFFFF"
							FlowDirection="LeftToRight"
							HorizontalAlignment="Center"
							Height="18"
							Margin="0"
							VerticalAlignment="Center"
							Width="19">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="20*" />
								<ColumnDefinition Width="20*" />
								<ColumnDefinition Width="20*" />
								<ColumnDefinition Width="20*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="23*" />
								<RowDefinition Height="19*" />
								<RowDefinition Height="19*" />
								<RowDefinition Height="19*" />
							</Grid.RowDefinitions>
							<Border x:Name="Highlight"
									BorderThickness="1"
									Grid.ColumnSpan="4"
									CornerRadius="0,0,1,1"
									Margin="-1"
									Opacity="1"
									Grid.Row="0"
									Grid.RowSpan="4">
								<Border.BorderBrush>
									<SolidColorBrush Color="{StaticResource PrimaryColor}" />
								</Border.BorderBrush>
							</Border>
							<Border x:Name="Background"
									BorderBrush="#FFFFFFFF"
									BorderThickness="1"
									Grid.ColumnSpan="4"
									CornerRadius=".5"
									Margin="0,-1,0,0"
									Opacity="1"
									Grid.Row="1"
									Grid.RowSpan="3">
								<Border.Background>
									<SolidColorBrush Color="{StaticResource TertiaryColor}" />
								</Border.Background>
							</Border>
							<Border x:Name="BackgroundGradient"
									BorderBrush="#BF000000"
									BorderThickness="1"
									Grid.ColumnSpan="4"
									CornerRadius=".5"
									Margin="0,-1,0,0"
									Opacity="1"
									Grid.Row="1"
									Grid.RowSpan="3">
								<Border.Background>
									<LinearGradientBrush EndPoint=".7,1"
									 StartPoint=".7,0">
										<GradientStop Color="#FFFFFFFF"
														Offset="0" />
										<GradientStop Color="#F9FFFFFF"
														Offset="0.375" />
										<GradientStop Color="#E5FFFFFF"
														Offset="0.625" />
										<GradientStop Color="#C6FFFFFF"
														 Offset="1" />
									</LinearGradientBrush>
								</Border.Background>
							</Border>
							<Rectangle Grid.ColumnSpan="4"
									   Grid.RowSpan="1"
									   StrokeThickness="1">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="0,1"
									 StartPoint="0,0">
										<GradientStop Color="{StaticResource TertiaryColor}" />
										<GradientStop Color="{StaticResource PrimaryColor}"
													Offset="1" />
									</LinearGradientBrush>
								</Rectangle.Fill>
								<Rectangle.Stroke>
									<LinearGradientBrush EndPoint="0.48,-1"
									 StartPoint="0.48,1.25">
										<GradientStop Color="#FF494949" />
										<GradientStop Color="#FF9F9F9F"
													Offset="1" />
									</LinearGradientBrush>
								</Rectangle.Stroke>
							</Rectangle>
							<Path Fill="#FF2F2F2F"
							  Grid.Row="1"
							  Grid.Column="0"
							  Grid.RowSpan="3"
							  Grid.ColumnSpan="4"
							  HorizontalAlignment="Center"
							  VerticalAlignment="Center"
							  RenderTransformOrigin="0.5,0.5"
							  Margin="4,3,4,3"
							  Stretch="Fill"
							  Data="M11.426758,8.4305077 L11.749023,8.4305077 
								L11.749023,16.331387 L10.674805,16.331387 
								L10.674805,10.299648 L9.0742188,11.298672
								L9.0742188,10.294277 C9.4788408,10.090176 
								9.9094238,9.8090878 10.365967,9.4510155 
								C10.82251,9.0929432 11.176106,8.7527733 
								11.426758,8.4305077 z M14.65086,8.4305077 
								L18.566387,8.4305077 L18.566387,9.3435936 
								L15.671368,9.3435936 L15.671368,11.255703 
								C15.936341,11.058764 16.27293,10.960293 
								16.681133,10.960293 C17.411602,10.960293 
								17.969301,11.178717 18.354229,11.615566 
								C18.739157,12.052416 18.931622,12.673672
								18.931622,13.479336 C18.931622,15.452317 
								18.052553,16.438808 16.294415,16.438808
								C15.560365,16.438808 14.951641,16.234707 
								14.468243,15.826504 L14.881817,14.929531
								C15.368796,15.326992 15.837872,15.525723 
								16.289043,15.525723 C17.298809,15.525723 
								17.803692,14.895514 17.803692,13.635098 
								C17.803692,12.460618 17.305971,11.873379 
								16.310528,11.873379 C15.83071,11.873379 
								15.399232,12.079271 15.016094,12.491055
								L14.65086,12.238613 z" />
							<Ellipse Grid.ColumnSpan="4"
									 Fill="#FFFFFFFF"
									 HorizontalAlignment="Center"
									 Height="3"
									 StrokeThickness="0"
									 VerticalAlignment="Center"
									 Width="3" />
							<Border x:Name="DisabledVisual"
									BorderBrush="#B2FFFFFF"
									BorderThickness="1"
									Grid.ColumnSpan="4"
									CornerRadius="0,0,.5,.5"
									Opacity="0"
									Grid.Row="0"
									Grid.RowSpan="4" />
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type DatePicker}">
		<Setter Property="Foreground"
		  Value="{StaticResource SecondaryBrush}" />
		<Setter Property="IsTodayHighlighted"
		  Value="True" />
		<Setter Property="SelectedDateFormat"
		  Value="Long" />
		<Setter Property="Padding"
		  Value="2" />
		<Setter Property="BorderThickness"
		  Value="1" />
		<Setter Property="HorizontalContentAlignment"
		  Value="Stretch" />
		<!--Set CalendarStyle to DatePickerCalendarStyle.-->
		<Setter Property="CalendarStyle"
		  Value="{DynamicResource DatePickerCalendarStyle}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DatePicker}">
					<Border BorderThickness="{TemplateBinding BorderThickness}"
							Padding="{TemplateBinding Padding}">
						<Border.BorderBrush>
							<SolidColorBrush Color="{StaticResource SecondaryColor}"/>
						</Border.BorderBrush>
						<Border.Background>
							<SolidColorBrush Color="{StaticResource TertiaryColor}"/>
						</Border.Background>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0"
														 To="1"
														 Storyboard.TargetProperty="Opacity"
														 Storyboard.TargetName="PART_DisabledVisual" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="PART_Root"
							  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Button x:Name="PART_Button"
									Grid.Column="1"
									Foreground="{TemplateBinding Foreground}"
									Focusable="False"
									HorizontalAlignment="Left"
									Margin="3,0,3,0"
									Grid.Row="0"
									Style="{StaticResource DropDownButtonStyle}"
									VerticalAlignment="Top" />
							<DatePickerTextBox x:Name="PART_TextBox"
											   Grid.Column="0"
											   Foreground="{TemplateBinding Foreground}"
											   Focusable="{TemplateBinding Focusable}"
											   HorizontalContentAlignment="Stretch"
											   Grid.Row="0"
											   VerticalContentAlignment="Stretch" />
							<Grid x:Name="PART_DisabledVisual"
								  Grid.ColumnSpan="2"
								  Grid.Column="0"
								  IsHitTestVisible="False"
								  Opacity="0"
								  Grid.Row="0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Rectangle Grid.Column="0"
										 Fill="{StaticResource TertiaryBrush}"
										 RadiusY="1"
										 Grid.Row="0"
										 RadiusX="1" />
								<Rectangle Grid.Column="1"
										 Fill="{StaticResource TertiaryBrush}"
										 Height="18"
										 Margin="3,0,3,0"
										 RadiusY="1"
										 Grid.Row="0"
										 RadiusX="1"
										 Width="19" />
								<Popup x:Name="PART_Popup"
										 AllowsTransparency="True"
										 Placement="Bottom"
										 PlacementTarget="{Binding ElementName=PART_TextBox}"
										 StaysOpen="False" />
							</Grid>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Style for the days of a month.-->
	<Style TargetType="CalendarDayButton"
	   x:Key="CalendarDayButtonStyle">
		<Setter Property="MinWidth"
		  Value="5" />
		<Setter Property="MinHeight"
		  Value="5" />
		<Setter Property="FontSize"
		  Value="10" />
		<Setter Property="HorizontalContentAlignment"
		  Value="Center" />
		<Setter Property="VerticalContentAlignment"
		  Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CalendarDayButton">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.1" />
								</VisualStateGroup.Transitions>
								<VisualState Name="Normal" />
								<VisualState Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="HighlightBackground"
														Storyboard.TargetProperty="Opacity"
													   To="0.5"
													   Duration="0" />          
									</Storyboard>
								</VisualState>
								<VisualState Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="HighlightBackground"
														   Storyboard.TargetProperty="Opacity"
														   To="0.5"
														   Duration="0" />
									</Storyboard>
								</VisualState>
								<VisualState Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="HighlightBackground"
														   Storyboard.TargetProperty="Opacity"
														   To="0"
														   Duration="0" />
										<DoubleAnimation Storyboard.TargetName="NormalText"
														   Storyboard.TargetProperty="Opacity"
														   To=".35"
														   Duration="0" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup Name="SelectionStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0" />
								</VisualStateGroup.Transitions>
								<VisualState Name="Unselected" />
								<VisualState Name="Selected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="SelectedBackground"
													   Storyboard.TargetProperty="Opacity"
													   To=".75"
													   Duration="0" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup Name="CalendarButtonFocusStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0" />
								</VisualStateGroup.Transitions>
								<VisualState Name="CalendarButtonFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual"
												 Storyboard.TargetProperty="Visibility"
												 Duration="0">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState Name="CalendarButtonUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual"
												 Storyboard.TargetProperty="Visibility"
												 Duration="0">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup Name="ActiveStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0" />
								</VisualStateGroup.Transitions>
								<VisualState Name="Active" />
								<VisualState Name="Inactive">
									<Storyboard>
										<ColorAnimation Duration="0"
								  Storyboard.TargetName="NormalText"
								  Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
								  To="#FF777777" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup Name="DayStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0" />
								</VisualStateGroup.Transitions>
								<VisualState Name="RegularDay" />
								<VisualState Name="Today">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="TodayBackground"
														   Storyboard.TargetProperty="Opacity"
														   To="1"
														   Duration="0" />
															<ColorAnimation Duration="0"
																		  Storyboard.TargetName="NormalText"
																		  Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
																		  To="#FFFFFFFF" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup Name="BlackoutDayStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0" />
								</VisualStateGroup.Transitions>
								<VisualState Name="NormalDay" />
								<VisualState Name="BlackoutDay">
									<Storyboard>
										<DoubleAnimation Duration="0"
													   Storyboard.TargetName="Blackout"
													   Storyboard.TargetProperty="Opacity"
													   To=".2" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="TodayBackground"
								 RadiusX="1"
								 RadiusY="1"
								 Opacity="0">
							<Rectangle.Fill>
								<SolidColorBrush Color="{StaticResource PrimaryColor}" />
							</Rectangle.Fill>
						</Rectangle>
						<Rectangle x:Name="SelectedBackground"
								 RadiusX="1"
								 RadiusY="1"
								 Opacity="0">
							<Rectangle.Fill>
								<SolidColorBrush Color="{StaticResource PrimaryColor}" />
							</Rectangle.Fill>
						</Rectangle>
						<Border Background="{TemplateBinding Background}"
							  BorderThickness="{TemplateBinding BorderThickness}"
							  BorderBrush="{TemplateBinding BorderBrush}" />
						<Rectangle x:Name="HighlightBackground"
								 RadiusX="1"
								 RadiusY="1"
								 Opacity="0">
							<Rectangle.Fill>
								<SolidColorBrush Color="{StaticResource PrimaryColor}" />
							</Rectangle.Fill>
						</Rectangle>
						<ContentPresenter x:Name="NormalText"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Margin="5,1,5,1">
							<TextElement.Foreground>
								<SolidColorBrush Color="#FF333333" />
							</TextElement.Foreground>
						</ContentPresenter>
						<Path x:Name="Blackout"
								Opacity="0"
								Margin="3"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Stretch"
								RenderTransformOrigin="0.5,0.5"
								Fill="#FF000000"
								Stretch="Fill"
								Data="M8.1772461,11.029181 L10.433105,
								  11.029181 L11.700684,12.801641 L12.973633,
								  11.029181 L15.191895,11.029181 L12.844727,
								  13.999395 L15.21875,17.060919 L12.962891,
								  17.060919 L11.673828,15.256231 L10.352539,
								  17.060919 L8.1396484,17.060919 L10.519043,
								  14.042364 z" />
										<Rectangle x:Name="DayButtonFocusVisual"
									 Visibility="Collapsed"
									 IsHitTestVisible="false"
									 RadiusX="1"
									 RadiusY="1">
							<Rectangle.Stroke>
								<SolidColorBrush Color="{StaticResource PrimaryColor}" />
							</Rectangle.Stroke>
						</Rectangle>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Style for the months of a year and years of a decade.-->
	<Style TargetType="CalendarButton"
	   x:Key="CalendarButtonStyle">
		<Setter Property="MinWidth"
		  Value="40" />
		<Setter Property="MinHeight"
		  Value="42" />
		<Setter Property="FontSize"
		  Value="10" />
		<Setter Property="HorizontalContentAlignment"
		  Value="Center" />
		<Setter Property="VerticalContentAlignment"
		  Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CalendarButton">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.1" />
								</VisualStateGroup.Transitions>
								<VisualState Name="Normal" />
								<VisualState Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="Background"
														   Storyboard.TargetProperty="Opacity"
														   To=".5"
														   Duration="0" />
									</Storyboard>
								</VisualState>
								<VisualState Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="Background"
														   Storyboard.TargetProperty="Opacity"
														   To=".5"
														   Duration="0" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup Name="SelectionStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0" />
								</VisualStateGroup.Transitions>
								<VisualState Name="Unselected" />
								<VisualState Name="Selected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="SelectedBackground"
														   Storyboard.TargetProperty="Opacity"
														   To=".75"
														   Duration="0" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup Name="ActiveStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0" />
								</VisualStateGroup.Transitions>
								<VisualState Name="Active" />
								<VisualState Name="Inactive">
									<Storyboard>
										<ColorAnimation Duration="0"
														  Storyboard.TargetName="NormalText"
														  Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
														  To="#FF777777" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup Name="CalendarButtonFocusStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0" />
								</VisualStateGroup.Transitions>
								<VisualState Name="CalendarButtonFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0"
												 Storyboard.TargetName="CalendarButtonFocusVisual"
												 Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState Name="CalendarButtonUnfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="SelectedBackground"
									 RadiusX="1"
									 RadiusY="1"
									 Opacity="0">
							<Rectangle.Fill>
								<SolidColorBrush Color="{StaticResource PrimaryColor}" />
							</Rectangle.Fill>
						</Rectangle>
						<Rectangle x:Name="Background"
									 RadiusX="1"
									 RadiusY="1"
									 Opacity="0">
							<Rectangle.Fill>
								<SolidColorBrush Color="{StaticResource PrimaryColor}" />
							</Rectangle.Fill>
						</Rectangle>
						<ContentPresenter x:Name="NormalText"
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											Margin="1,0,1,1">
							<TextElement.Foreground>
								<SolidColorBrush Color="#FF333333" />
							</TextElement.Foreground>
						</ContentPresenter>
						<Rectangle x:Name="CalendarButtonFocusVisual"
									 Visibility="Collapsed"
									 IsHitTestVisible="false"
									 RadiusX="1"
									 RadiusY="1">
							<Rectangle.Stroke>
								<SolidColorBrush Color="{StaticResource PrimaryColor}" />
							</Rectangle.Stroke>
						</Rectangle>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background">
			<Setter.Value>
				<SolidColorBrush Color="{StaticResource TertiaryColor}" />
			</Setter.Value>
		</Setter>
	</Style>

	<!--Button to go to the previous month or year.-->
	<ControlTemplate x:Key="PreviousButtonTemplate"
				 TargetType="{x:Type Button}">
		<Grid Cursor="Hand">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<Storyboard>
							<DoubleAnimation Duration="0"
							 To=".5"
							 Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
							 Storyboard.TargetName="path" />
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<!--<Rectangle Fill="Transparent" Opacity="1" Stretch="Fill"/>-->
			<Grid  Background="Transparent">
				<Path x:Name="path"
						Margin="14,-6,0,0"
						Stretch="Fill"
						HorizontalAlignment="Left"
						Height="10"
						VerticalAlignment="Center"
						Width="6"
						Data="M288.75,232.25 L288.75,240.625 L283,236.625 z">
					<Path.Fill>
						<SolidColorBrush Color="{StaticResource TertiaryColor}" />
					</Path.Fill>
				</Path>
			</Grid>
		</Grid>
	</ControlTemplate>

	<!--Button to go to the next month or year.-->
	<ControlTemplate x:Key="NextButtonTemplate"
				 TargetType="{x:Type Button}">
		<Grid Cursor="Hand">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<Storyboard>
							<DoubleAnimation Duration="0"
							 To=".5"
							 Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
							 Storyboard.TargetName="path" />
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<!--<Rectangle Fill="#11E5EBF1" Opacity="1" Stretch="Fill"/>-->
			<Grid Background="Transparent">
				<Path x:Name="path"
					Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"
					HorizontalAlignment="Right"
					Height="10"
					Margin="0,-6,14,0"
					Stretch="Fill"
					VerticalAlignment="Center"
					Width="6">
					<Path.Fill>
						<SolidColorBrush Color="{StaticResource TertiaryColor}" />
					</Path.Fill>
				</Path>
			</Grid>
		</Grid>
	</ControlTemplate>

	<!--Button to go up a level to the year or decade.-->
	<ControlTemplate x:Key="HeaderButtonTemplate"
				 TargetType="{x:Type Button}">
		<Grid Cursor="Hand">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<Storyboard>
							<DoubleAnimation Duration="0"
							 To=".5"
							 Storyboard.TargetProperty="Opacity"
							 Storyboard.TargetName="buttonContent" />
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<ContentPresenter x:Name="buttonContent"
						  Margin="1,4,1,9"
						  ContentTemplate="{TemplateBinding ContentTemplate}"
						  Content="{TemplateBinding Content}"
						  TextElement.Foreground="#FF333333"
						  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
		</Grid>
	</ControlTemplate>

	<Style x:Key="CalendarItemStyle" TargetType="{x:Type CalendarItem}">
		<Setter Property="Margin"
		  Value="0,3,0,3" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CalendarItem}">
					<ControlTemplate.Resources>
						<DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
							<TextBlock Foreground="#FFFFFFFF"
									   FontWeight="Bold"
									   FontSize="9.5"
									   FontFamily="Verdana"
									   Margin="0,6,0,6"
									   Text="{Binding}"
									   HorizontalAlignment="Center"
									   VerticalAlignment="Center" />
						</DataTemplate>
					</ControlTemplate.Resources>
					<Grid x:Name="PART_Root">
						<Grid.Resources>
							<SolidColorBrush x:Key="DisabledColor"
							 Color="{StaticResource PrimaryColor}" />
						</Grid.Resources>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0"
														   To="1"
														   Storyboard.TargetProperty="Opacity"
														   Storyboard.TargetName="PART_DisabledVisual" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border BorderBrush="{TemplateBinding BorderBrush}"
								  BorderThickness="{TemplateBinding BorderThickness}"
								  Background="{TemplateBinding Background}"
								  CornerRadius="1">
							<Border BorderBrush="#FFFFFFFF"
									BorderThickness="2"
									CornerRadius="1">
								<Grid>
									<Grid.Resources>
									</Grid.Resources>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>
									<Button x:Name="PART_PreviousButton"
											Template="{StaticResource PreviousButtonTemplate}"
											Focusable="False"
											HorizontalAlignment="Left"
											Grid.Column="0"
											Grid.Row="0"
											Height="20"
											Width="28" />
									<Button x:Name="PART_HeaderButton"
											FontWeight="Bold"
											Focusable="False"
											FontSize="10.5"
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											Grid.Column="1"
											Grid.Row="0"
											Template="{StaticResource HeaderButtonTemplate}" />
									<Button x:Name="PART_NextButton"
											Focusable="False"
											HorizontalAlignment="Right"
											Grid.Column="2"
											Grid.Row="0"
											Template="{StaticResource NextButtonTemplate}"
											Height="20"
											Width="28" />
									<Grid x:Name="PART_MonthView"
										  Visibility="Visible"
										  Grid.ColumnSpan="3"
										  Grid.Row="1"
										  Margin="6,-1,6,6"
										  HorizontalAlignment="Center">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
									</Grid>
									<Grid x:Name="PART_YearView"
										  Visibility="Hidden"
										  Grid.ColumnSpan="3"
										  Grid.Row="1"
										  HorizontalAlignment="Center"
										  Margin="6,-3,7,6">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
									</Grid>
								</Grid>
							</Border>
						</Border>
						<Rectangle x:Name="PART_DisabledVisual"
								 Fill="{StaticResource PrimaryBrush}"
								 Opacity="0"
								 RadiusY="2"
								 RadiusX="2"
								 Stretch="Fill"
								 Stroke="{StaticResource PrimaryBrush}"
								 StrokeThickness="1"
								 Visibility="Collapsed" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled"
								 Value="False">
							<Setter Property="Visibility"
									TargetName="PART_DisabledVisual"
									Value="Visible" />
						</Trigger>
						<DataTrigger Binding="{Binding DisplayMode, 
									  RelativeSource={RelativeSource FindAncestor, 
									  AncestorType={x:Type Calendar}}}"
									  Value="Year">
							<Setter Property="Visibility"
									TargetName="PART_MonthView"
									Value="Hidden" />       
							<Setter Property="Visibility"
									TargetName="PART_YearView"
									Value="Visible" />
						</DataTrigger>
						<DataTrigger Binding="{Binding DisplayMode, 
									 RelativeSource={RelativeSource FindAncestor, 
									 AncestorType={x:Type Calendar}}}"
									 Value="Decade">
							<Setter Property="Visibility"
								TargetName="PART_MonthView"
								Value="Hidden" />
										<Setter Property="Visibility"
								TargetName="PART_YearView"
								Value="Visible" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DPCalendarStyle" TargetType="{x:Type Calendar}">
		<Setter Property="CalendarButtonStyle"
		  Value="{StaticResource CalendarButtonStyle}" />
		<Setter Property="CalendarDayButtonStyle"
		  Value="{StaticResource CalendarDayButtonStyle}" />
		<Setter Property="CalendarItemStyle"
		  Value="{StaticResource CalendarItemStyle}" />
		<Setter Property="Foreground"
		  Value="{StaticResource SecondaryBrush}" />
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1"
						   StartPoint="0.5,0">

					<!--The first two gradient stops specifies the background for 
			the calendar's heading and navigation buttons.-->
					<GradientStop Color="{StaticResource TertiaryColor}"
					  Offset="0" />
					<GradientStop Color="{StaticResource PrimaryColor}"
					  Offset="0.16" />

					<!--The next gradient stop specifies the background for 
			the calendar area.-->
					<GradientStop Color="{StaticResource TertiaryColor}"
					  Offset="0.16" />
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<SolidColorBrush Color="{StaticResource SecondaryColor}"/>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness"
		  Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Calendar}">
					<StackPanel x:Name="PART_Root"
					HorizontalAlignment="Center">
						<CalendarItem x:Name="PART_CalendarItem"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							Style="{TemplateBinding CalendarItemStyle}" />
					</StackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- TextBlocks -->
	<Style TargetType="TextBlock">
		<Setter Property="FontWeight"
				Value="Bold" />
		<Setter Property="Foreground"
				Value="{StaticResource SecondaryBrush}"/>
	</Style>
	

	<!-- Labels -->
	<Style TargetType="Label">
		<Setter Property="FontWeight"
				Value="Bold" />
		<Setter Property="Foreground"
				Value="{StaticResource SecondaryBrush}"/>
	</Style>


	<!-- TextBoxes -->
	<Style TargetType="TextBox">
		<Setter Property="Background"
				Value="{StaticResource TertiaryBrush}"/>
		<Setter Property="Foreground"
				Value="{StaticResource SecondaryBrush}"/>
		<Setter Property="BorderBrush"
				Value="{StaticResource SecondaryBrush}" />
		<Setter Property="BorderThickness"
				Value="2" />
	</Style>

   

	<!-- Tooltip -->
	<Style TargetType="ToolTip">
		<Setter Property="Width"
				Value="250" />
		<Setter Property="Background"
				Value="#FFC5C5C5" />
		<Setter Property="FontSize"
				Value="10" />
		<Setter Property="Foreground"
				Value="Black" />
		<Setter Property="BorderBrush"
				Value="#FF747474" />
		<Setter Property="BorderThickness"
				Value="2" />
	</Style>

	<!-- Border -->
	<Style x:Key="BorderBrush"
		   TargetType="Border">
		<Setter Property="BorderBrush"
				Value="#FF0F68A6" />
		<Setter Property="BorderThickness"
				Value="2" />
	</Style>

	<Style x:Key="HeaderedBorderStyle" 
		   TargetType="Border">
		<Setter Property="BorderBrush"
				Value="#FF234D69" />
		<Setter Property="BorderThickness"
				Value="2" />
		<Setter Property="CornerRadius"
				Value="5" />
		<Setter Property="Background"
				Value="#FFD3DDE2" />
		<Setter Property="Padding"
				Value="5" />
	</Style>

	<!-- DockPanels -->
	<Style TargetType="DockPanel">
		<Setter Property="Background"
				Value="{StaticResource PrimaryBrush}" />
	</Style>

	<!-- Menu -->
	<Style TargetType="Menu">
		<Setter Property="Background"
				Value="{StaticResource PrimaryBrush}" />
		<Setter Property="Foreground"
				Value="{StaticResource SecondaryBrush}"/>
	</Style>

	<!-- MenuItem -->
	<Style TargetType="MenuItem">
		<Setter Property="Background"
				Value="{StaticResource PrimaryBrush}" />
		<Setter Property="Foreground"
				Value="{StaticResource SecondaryBrush}"/>
	</Style>

	<!-- StackPanels>
	<Style TargetType="StackPanel">
		<Setter Property="Background"
				Value="{StaticResource TertiaryBrush}" />
	</Style-->

	<!-- StackPanels -->
	<Style TargetType="StackPanel">
		<Setter Property="FocusManager.IsFocusScope"
				Value="True"/>
	</Style>

	<!-- DataGrids -->
	<Style TargetType="DataGrid">
		<Setter Property="RowBackground"
				Value="{StaticResource TertiaryBrush}"/>
		<Setter Property="Foreground"
				Value="{StaticResource SecondaryBrush}"/>
		<Setter Property="HorizontalGridLinesBrush"
				Value="{StaticResource SecondaryBrush}"/>
		<Setter Property="VerticalGridLinesBrush"
				Value="{StaticResource SecondaryBrush}"/>
	</Style>

	<Style TargetType="{x:Type DataGridColumnHeader}">
		<Setter Property="Background"
				Value="{StaticResource PrimaryBrush}"/>
	</Style>

	<!--ScrollViewer--><!--
	<Style x:Key="{x:Type ScrollViewer}" 
		   TargetType="{x:Type ScrollViewer}">
		<Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid>
						<Grid Background="{TemplateBinding Background}">
							<ScrollContentPresenter 
									x:Name="PART_ScrollContentPresenter"
									Margin="{TemplateBinding Padding}"
									Content="{TemplateBinding Content}"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									CanContentScroll="{TemplateBinding CanContentScroll}"/>
						</Grid>
						<Grid Background="Transparent">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<ScrollBar 
									x:Name="PART_VerticalScrollBar"
									Grid.Column="1"
									Minimum="0.0"
									Maximum="{TemplateBinding ScrollableHeight}"
									ViewportSize="{TemplateBinding ViewportHeight}"
									Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalOffset, Mode=OneWay}"
									Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"         
									Cursor="Arrow"
									AutomationProperties.AutomationId="VerticalScrollBar"/>
							<ScrollBar 
									x:Name="PART_HorizontalScrollBar"
									Orientation="Horizontal"
									Grid.Row="1"
									Minimum="0.0"
									Maximum="{TemplateBinding ScrollableWidth}"
									ViewportSize="{TemplateBinding ViewportWidth}"
									Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HorizontalOffset, Mode=OneWay}"
									Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
									Cursor="Arrow"
									AutomationProperties.AutomationId="HorizontalScrollBar"/>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEnabled" 
					 Value="false">
				<Setter Property="Foreground" 
						Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
			</Trigger>
			<Trigger Property="IsMouseOver"
					 Value="true">
				<Setter Property="HorizontalScrollBarVisibility"
						Value="Visible"/>
				<Setter Property="VerticalScrollBarVisibility"
						Value="Visible"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="ScrollBarButton"
		   TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle"
				Value="true"/>
		<Setter Property="Focusable"
				Value="false"/>
		<Setter Property="IsTabStop"
				Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{TemplateBinding Background}"/>
					<ControlTemplate.Triggers>
						<Trigger Property="theme:ScrollChrome.ScrollGlyph" Value="UpArrow">
							<Setter TargetName="Arrow" Property="Data" Value="M 3,0 l 3,8 l -6,0 Z"/>
						</Trigger>
						<Trigger Property="theme:ScrollChrome.ScrollGlyph" Value="DownArrow">
							<Setter TargetName="Arrow" Property="Data" Value="M 0,0 l 6,0 l -3,8 Z"/>
						</Trigger>
						<Trigger Property="theme:ScrollChrome.ScrollGlyph" Value="LeftArrow">
							<Setter TargetName="Arrow" Property="Data" Value="M 0,3 l 8,-3 l 0,6 Z"/>
						</Trigger>
						<Trigger Property="theme:ScrollChrome.ScrollGlyph" Value="RightArrow">
							<Setter TargetName="Arrow" Property="Data" Value="M 0,0 l 8,3 l -8,3 Z"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarThumb"
		   TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle"
				Value="true"/>
		<Setter Property="IsTabStop"
				Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Background="#FF777777" CornerRadius="2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="HorizontalScrollBarPageButton"
		   TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle"
				Value="true"/>
		<Setter Property="Background"
				Value="Transparent"/>
		<Setter Property="Focusable"
				Value="false"/>
		<Setter Property="IsTabStop"
				Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Fill="{TemplateBinding Background}"
							   Width="{TemplateBinding Width}"
							   Height="{TemplateBinding Height}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="VerticalScrollBarPageButton"
		   TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle"
				Value="true"/>
		<Setter Property="Background"
				Value="Transparent"/>
		<Setter Property="Focusable"
				Value="false"/>
		<Setter Property="IsTabStop"
				Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Fill="{TemplateBinding Background}"
							   Width="{TemplateBinding Width}"
							   Height="{TemplateBinding Height}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="{x:Type ScrollBar}"
		   TargetType="{x:Type ScrollBar}">
		<Setter Property="Background"
				Value="#FF979797"/>
		<Setter Property="Stylus.IsPressAndHoldEnabled"
				Value="false"/>
		<Setter Property="Stylus.IsFlicksEnabled"
				Value="false"/>
		<Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Width"
				Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
		<Setter Property="MinWidth"
				Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
		<Setter Property="Margin"
				Value="2"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<Border 
							x:Name="Bg"
							CornerRadius="2"                         
							Margin="2"
							Opacity="0.75"
							Background="{TemplateBinding Background}"
							VerticalAlignment="Bottom">
						<Grid
								SnapsToDevicePixels="true">
							<Grid.RowDefinitions>
								<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
								<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
							</Grid.RowDefinitions>
							<RepeatButton
									Style="{StaticResource ScrollBarButton}"
									Background="#FFCBCBCB"                                    
									IsEnabled="{TemplateBinding IsMouseOver}"
									Command="{x:Static ScrollBar.LineUpCommand}"
									theme:ScrollChrome.ScrollGlyph="UpArrow"
									Margin="0,4"/>
							<RepeatButton                   
									Style="{StaticResource ScrollBarButton}"
									Background="#FFCBCBCB"
									Grid.Row="1"
									IsEnabled="{TemplateBinding IsMouseOver}"
									Command="{x:Static ScrollBar.LineDownCommand}"
									theme:ScrollChrome.ScrollGlyph="DownArrow"
									Margin="0,4">
							</RepeatButton>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled"
								 Value="false">
							<Setter TargetName="Bg"
									Property="Visibility"
									Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsMouseOver" Value="True"/>
					<Condition Property="Orientation" Value="Vertical"/>
				</MultiTrigger.Conditions>
				<MultiTrigger.Setters>
					<Setter Property="Width"
							Value="30"/>
					<Setter
							Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ScrollBar}">
								<Border 
										CornerRadius="4"                         
										Margin="2"
										Opacity="0.75"
										Background="{TemplateBinding Background}">
									<Grid
											SnapsToDevicePixels="true">
										<Grid.RowDefinitions>
											<RowDefinition Height="0.00001*"/>
											<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
											<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
										</Grid.RowDefinitions>
										<Track
												Name="PART_Track"
												IsEnabled="{TemplateBinding IsMouseOver}"
												IsDirectionReversed="true">
											<Track.DecreaseRepeatButton>
												<RepeatButton Style="{StaticResource VerticalScrollBarPageButton}"
														Command="{x:Static ScrollBar.PageUpCommand}"/>
											</Track.DecreaseRepeatButton>
											<Track.IncreaseRepeatButton>
												<RepeatButton Style="{StaticResource VerticalScrollBarPageButton}"
														Command="{x:Static ScrollBar.PageDownCommand}"/>
											</Track.IncreaseRepeatButton>
											<Track.Thumb>
												<Thumb Style="{StaticResource ScrollBarThumb}"
														theme:ScrollChrome.ScrollGlyph="VerticalGripper"
														Margin="2"/>
											</Track.Thumb>
										</Track>
										<RepeatButton
												Style="{StaticResource ScrollBarButton}"
												Background="#FFFFFFFF"
												Grid.Row="1"
												IsEnabled="{TemplateBinding IsMouseOver}"
												Command="{x:Static ScrollBar.LineUpCommand}"
												theme:ScrollChrome.ScrollGlyph="UpArrow"
												RenderTransformOrigin="0.5, 0.5">
											<RepeatButton.RenderTransform>
												<ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
											</RepeatButton.RenderTransform>
										</RepeatButton>
										<RepeatButton                           
												Style="{StaticResource ScrollBarButton}"
												Background="#FFFFFFFF"
												Grid.Row="2"
												IsEnabled="{TemplateBinding IsMouseOver}"
												Command="{x:Static ScrollBar.LineDownCommand}"
												theme:ScrollChrome.ScrollGlyph="DownArrow"
												RenderTransformOrigin="0.5, 0.5">
											<RepeatButton.RenderTransform>
												<ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
											</RepeatButton.RenderTransform>
										</RepeatButton>
									</Grid>
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</MultiTrigger.Setters>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Orientation" Value="Horizontal"/>
					<Condition Property="IsMouseOver" Value="False"/>
				</MultiTrigger.Conditions>
				<MultiTrigger.Setters>
					<Setter Property="Width"
							Value="Auto"/>
					<Setter Property="MinWidth"
							Value="0"/>
					<Setter Property="Height"
							Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
					<Setter Property="MinHeight"
							Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ScrollBar}">
								<Border 
										x:Name="Bg"
										CornerRadius="2"                         
										Margin="2"
										Opacity="0.75"
										Background="{TemplateBinding Background}"
										HorizontalAlignment="Right">
									<Grid
											SnapsToDevicePixels="true">
										<Grid.ColumnDefinitions>
											<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
											<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
										</Grid.ColumnDefinitions>
										<RepeatButton
												Style="{StaticResource ScrollBarButton}"    
												Background="#FFCBCBCB"
												IsEnabled="{TemplateBinding IsMouseOver}"
												Command="{x:Static ScrollBar.LineLeftCommand}"
												theme:ScrollChrome.ScrollGlyph="LeftArrow"
												Margin="4,0"/>
										<RepeatButton
												Style="{StaticResource ScrollBarButton}"                                        
												Background="#FFCBCBCB"
												Grid.Column="1"
												IsEnabled="{TemplateBinding IsMouseOver}"
												Command="{x:Static ScrollBar.LineRightCommand}"
												theme:ScrollChrome.ScrollGlyph="RightArrow"
												Margin="4,0"/>
									</Grid>
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="IsEnabled"
											 Value="false">
										<Setter TargetName="Bg"
												Property="Visibility"
												Value="Hidden"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</MultiTrigger.Setters>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsMouseOver" Value="True"/>
					<Condition Property="Orientation" Value="Horizontal"/>
				</MultiTrigger.Conditions>
				<MultiTrigger.Setters>
					<Setter Property="Width"
							Value="Auto"/>
					<Setter Property="MinWidth"
							Value="0"/>
					<Setter Property="Height"
							Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
					<Setter Property="MinHeight"
							Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
					<Setter Property="Height"
							Value="30"/>
					<Setter
							Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ScrollBar}">
								<Border 
										CornerRadius="4"                         
										Margin="2"
										Opacity="0.75"
										Background="{TemplateBinding Background}">
									<Grid
											SnapsToDevicePixels="true">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="0.00001*"/>
											<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
											<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
										</Grid.ColumnDefinitions>
										<Track
												Name="PART_Track"
												IsEnabled="{TemplateBinding IsMouseOver}">
											<Track.DecreaseRepeatButton>
												<RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
													  Command="{x:Static ScrollBar.PageLeftCommand}"/>
											</Track.DecreaseRepeatButton>
											<Track.IncreaseRepeatButton>
												<RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
													  Command="{x:Static ScrollBar.PageRightCommand}"/>
											</Track.IncreaseRepeatButton>
											<Track.Thumb>
												<Thumb x:Name="Thumb" Style="{StaticResource ScrollBarThumb}"
													   theme:ScrollChrome.ScrollGlyph="HorizontalGripper"
													   Margin="2"/>
											</Track.Thumb>
										</Track>
										<RepeatButton
												Style="{StaticResource ScrollBarButton}"
												Background="#FFFFFFFF"
												Grid.Column="1"
												IsEnabled="{TemplateBinding IsMouseOver}"
												Command="{x:Static ScrollBar.LineLeftCommand}"
												theme:ScrollChrome.ScrollGlyph="LeftArrow"
												RenderTransformOrigin="0.5, 0.5">
											<RepeatButton.RenderTransform>
												<ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
											</RepeatButton.RenderTransform>
										</RepeatButton>
										<RepeatButton                           
												Style="{StaticResource ScrollBarButton}"
												Background="#FFFFFFFF"
												Grid.Column="2"
												IsEnabled="{TemplateBinding IsMouseOver}"
												Command="{x:Static ScrollBar.LineRightCommand}"
												theme:ScrollChrome.ScrollGlyph="RightArrow"
												RenderTransformOrigin="0.5, 0.5">
											<RepeatButton.RenderTransform>
												<ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
											</RepeatButton.RenderTransform>
										</RepeatButton>
									</Grid>
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</MultiTrigger.Setters>
			</MultiTrigger>
		</Style.Triggers>
	</Style>-->

	<!-- TreeView -->
	<Style TargetType="TreeView">
		<Setter Property="Background" Value="{StaticResource TertiaryBrush}"/>
	</Style>
	
	<!-- TreeViewItem -->
	<Style TargetType="TreeViewItem">
		<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="TreeViewItem">
					<Grid Background="{StaticResource TertiaryBrush}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" MinWidth="19" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition/>
							</Grid.RowDefinitions>
							<ToggleButton IsChecked="False"
											  ClickMode="Press"
											  Name="Expander">
								<ToggleButton.Style>
									<Style TargetType="ToggleButton">
										<Style.Resources>
											<ResourceDictionary />
										</Style.Resources>
										<Setter Property="UIElement.Focusable" Value="False"/>
										<Setter Property="FrameworkElement.Width" Value="16"/>
										<Setter Property="FrameworkElement.Height" Value="16"/>
										<Setter Property="Control.Template">
											<Setter.Value>
												<ControlTemplate TargetType="ToggleButton">
													<Border Padding="5,5,5,5"
																Background="{StaticResource TertiaryBrush}"
																Width="16"
																Height="16">
														<Path Fill="#FFFFFFFF"
																  Stroke="#FF818181"
																  Name="ExpandPath">
															<Path.Data>
																<PathGeometry Figures="M0,0L0,6L6,0z" />
															</Path.Data>
															<Path.RenderTransform>
																<RotateTransform Angle="135" CenterX="3" CenterY="3" />
															</Path.RenderTransform>
														</Path>
													</Border>
													<ControlTemplate.Triggers>
														<Trigger Property="ToggleButton.IsChecked" Value="True">
															<Setter Property="UIElement.RenderTransform" TargetName="ExpandPath">
																<Setter.Value>
																	<RotateTransform Angle="180" CenterX="3" CenterY="3" />
																</Setter.Value>
															</Setter>
															<Setter Property="Shape.Fill" TargetName="ExpandPath">
																<Setter.Value>
																<SolidColorBrush>#FF1D1D1D</SolidColorBrush>
																</Setter.Value>
															</Setter>
															<Setter Property="Shape.Stroke" TargetName="ExpandPath">
																<Setter.Value>
																<SolidColorBrush>#FF1D1D1D</SolidColorBrush>
																</Setter.Value>
															</Setter>
														</Trigger>
														<Trigger Property="UIElement.IsMouseOver" Value="True">
															<Setter Property="Shape.Stroke" TargetName="ExpandPath">
																<Setter.Value>
																<SolidColorBrush>#FF1D1D1D</SolidColorBrush>
																</Setter.Value>
															</Setter>
															<Setter Property="Shape.Fill" TargetName="ExpandPath">
																<Setter.Value>
																<SolidColorBrush>#FF1D1D1D</SolidColorBrush>
																</Setter.Value>
															</Setter>
														</Trigger>
														<MultiTrigger>
															<MultiTrigger.Conditions>
																<Condition Property="UIElement.IsMouseOver" Value="True"/>
																<Condition Property="ToggleButton.IsChecked" Value="True"/>
															</MultiTrigger.Conditions>
															<Setter Property="Shape.Stroke" TargetName="ExpandPath">
																<Setter.Value>
																	<SolidColorBrush>#FF1D1D1D</SolidColorBrush>
																</Setter.Value>
															</Setter>
															<Setter Property="Shape.Fill" TargetName="ExpandPath">
																<Setter.Value>
																<SolidColorBrush>#FF1D1D1D</SolidColorBrush>
																</Setter.Value>
															</Setter>
														</MultiTrigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</ToggleButton.Style>
							</ToggleButton>
							<Border Background="{StaticResource TertiaryBrush}"
										Name="Bd"
										SnapsToDevicePixels="True"
										Grid.Column="1">
								<ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}"
													  ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
													  ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
													  ContentSource="Header"
													  Name="PART_Header"
													  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
													  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
							</Border>
							<ItemsPresenter Name="ItemsHost"
												Grid.Column="1"
												Grid.Row="1"
												Grid.ColumnSpan="2"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="TreeViewItem.IsExpanded" Value="False">
								<Setter Property="UIElement.Visibility" TargetName="ItemsHost" Value="Collapsed"/>
							</Trigger>
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="Background" TargetName="Bd">
									<Setter.Value>
									<DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
									</Setter.Value>
								</Setter>
								<Setter Property="TextElement.Foreground">
									<Setter.Value>
										<DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrush}" />
									</Setter.Value>
								</Setter>
							</Trigger>
							<Trigger Property="UIElement.IsEnabled" Value="False">
								<Setter Property="TextElement.Foreground">
									<Setter.Value>
										<DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
									</Setter.Value>
								</Setter>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--ComboBox-->
	<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="20" />
			</Grid.ColumnDefinitions>
			<Border
				  x:Name="Border" 
				  Grid.ColumnSpan="2"
				  CornerRadius="0"
				  Background="{StaticResource TertiaryBrush}"
				  BorderBrush="{StaticResource SecondaryBrush}"
				  BorderThickness="2" />
			<Border 
				  Grid.Column="0"
				  CornerRadius="0" 
				  Margin="1" 
				  Background="{StaticResource TertiaryBrush}"
				  BorderBrush="{StaticResource SecondaryBrush}"
				  BorderThickness="1" />
			<Path 
				  x:Name="Arrow"
				  Grid.Column="1"     
				  Fill="White"
				  HorizontalAlignment="Center"
				  VerticalAlignment="Center"
				  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
				/>
		</Grid>
	</ControlTemplate>

	<ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
		<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
	</ControlTemplate>

	<Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="MinWidth" Value="120"/>
		<Setter Property="MinHeight" Value="20"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid>
						<ToggleButton 
							Name="ToggleButton" 
							Template="{StaticResource ComboBoxToggleButton}" 
							Grid.Column="2" 
							Focusable="false"
							IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
							ClickMode="Press">
						</ToggleButton>
						<ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
							ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
							ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
							Margin="3,3,23,3"
							VerticalAlignment="Center"
							HorizontalAlignment="Left" />
						<TextBox x:Name="PART_EditableTextBox"
							Style="{x:Null}" 
							Template="{StaticResource ComboBoxTextBox}" 
							HorizontalAlignment="Left" 
							VerticalAlignment="Center" 
							Margin="3,3,23,3"
							Focusable="True" 
							Background="#FF3F3F3F"
							Foreground="Green"
							Visibility="Hidden"
							IsReadOnly="{TemplateBinding IsReadOnly}"/>
						<Popup 
							Name="Popup"
							Placement="Bottom"
							IsOpen="{TemplateBinding IsDropDownOpen}"
							AllowsTransparency="True" 
							Focusable="False"
							PopupAnimation="Slide">

							<Grid Name="DropDown"
							  SnapsToDevicePixels="True"                
							  MinWidth="{TemplateBinding ActualWidth}"
							  MaxHeight="{TemplateBinding MaxDropDownHeight}">
								<Border 
								x:Name="DropDownBorder"
								Background="#FF3F3F3F"

								BorderThickness="1"
								BorderBrush="#888888"/>
								<ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
									<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="#888888"/>
							<Setter Property="BorderBrush" Value="#888888"/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
						<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
							<Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
							<Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
						</Trigger>
						<Trigger Property="IsEditable"  Value="true">
							<Setter Property="IsTabStop" Value="false"/>
							<Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
							<Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
		</Style.Triggers>
	</Style>

	<!-- SimpleStyles: ComboBoxItem -->
	<Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<Border Name="Border"
							  Padding="2"
							  SnapsToDevicePixels="true"
							  Background="{StaticResource TertiaryBrush}">
						<ContentPresenter />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsHighlighted" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource PrimaryBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource SecondaryBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!-- CheckBox iskljuceno je zato sto je pucalo kad se klikne   An unhandled exception of type 'System.Windows.Media.Animation.AnimationException' -->
	<!--<Style TargetType="CheckBox">
		<Setter Property="Foreground"
				Value="{StaticResource TextBrush}" />
		<Setter Property="Background"
				Value="#00000000" />
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Padding"
				Value="4,1,0,0" />
		<Setter Property="BorderBrush"
				Value="{StaticResource PrimaryBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CheckBox">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="16" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
																	   Storyboard.TargetName="Bullet"
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0"
																  Value="1" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
																	   Storyboard.TargetName="Background"
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0"
																  Value="1" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
																	   Storyboard.TargetName="Highlight"
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0"
																  Value="1" />
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Duration="00:00:00.001"
																	  Storyboard.TargetName="Shadow"
																	  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0"
																 Value="#4B000000" />
										</ColorAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
																	   Storyboard.TargetName="Background"
																	   Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Offset)">
											<SplineDoubleKeyFrame KeyTime="0"
																  Value=".1" />
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Duration="00:00:00.001"
																	  Storyboard.TargetName="Highlight"
																	  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0"
																 Value="#4AFFFFFF" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
																	   Storyboard.TargetName="Bullet"
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0"
																  Value="1" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
																	   Storyboard.TargetName="Background"
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0"
																  Value="0.6" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
																	   Storyboard.TargetName="Background"
																	   Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Offset)">
											<SplineDoubleKeyFrame KeyTime="0"
																  Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Duration="00:00:00.001"
																	  Storyboard.TargetName="White"
																	  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0"
																 Value="#FF000000" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Duration="00:00:00.001"
																	  Storyboard.TargetName="White"
																	  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0"
																 Value="#FFC8C8C8" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Duration="00:00:00.001"
																	  Storyboard.TargetName="Highlight"
																	  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0"
																 Value="#4BFFFFFF" />
										</ColorAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
																	   Storyboard.TargetName="Highlight"
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0"
																  Value="0.5" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter"
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0"
																  Value=".55" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
																	   Storyboard.TargetName="Bullet"
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0"
																  Value="0.5" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Duration="00:00:00.001"
																	   Storyboard.TargetName="Background"
																	   Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0"
																  Value="0.2" />
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Duration="00:00:00.001"
																	  Storyboard.TargetName="White"
																	  Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
											<SplineColorKeyFrame KeyTime="0"
																 Value="#FFB1B1B1" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Duration="00:00:00.001"
																	  Storyboard.TargetName="White"
																	  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0"
																 Value="#FFECECEC" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Duration="00:00:00.001"
																	  Storyboard.TargetName="White"
																	  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0"
																 Value="#FFECECEC" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
																	   Storyboard.TargetName="Bullet"
																	   Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
																	   Storyboard.TargetName="IndeterminateRectangle"
																	   Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Duration="00:00:00.001"
																	  Storyboard.TargetName="InnerBorder"
																	  Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
											<SplineColorKeyFrame KeyTime="0"
																 Value="#BF000000" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid" />
								<VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip"
																	   Storyboard.TargetProperty="IsOpen">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<system:Boolean>True</system:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

						</VisualStateManager.VisualStateGroups>
						<Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							  Width="16"
							  Height="16">
							<Grid.RowDefinitions>
								<RowDefinition Height="50*" />
								<RowDefinition Height="50*" />
							</Grid.RowDefinitions>
							<Border Grid.RowSpan="2"
									x:Name="White"
									BorderBrush="#FFB5B5B5"
									BorderThickness="1.2">
								<Border.Background>
									<RadialGradientBrush>
										<RadialGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform CenterX="0.5"
																CenterY="0.5"
																ScaleX="1.35"
																ScaleY="1.35" />
											</TransformGroup>
										</RadialGradientBrush.RelativeTransform>
										<GradientStop Color="#FFFFFFFF"
													  Offset="0" />
										<GradientStop Color="#FFFFFFFF"
													  Offset="1" />
									</RadialGradientBrush>
								</Border.Background>
							</Border>
							<Border BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="1.2"
									x:Name="Background"
									Grid.RowSpan="2"
									Opacity=".5">
								<Border.Background>
									<LinearGradientBrush EndPoint="0.5,1.4"
														 StartPoint="0.5,0">
										<GradientStop Color="{StaticResource PrimaryColor}"
													  Offset="0.75" />
										<GradientStop Color="{StaticResource SecondaryColor}"
													  Offset="1" />
									</LinearGradientBrush>
								</Border.Background>
							</Border>
							<Border Background="{TemplateBinding Background}"
									BorderBrush="#FFFFFFFF"
									BorderThickness=".75"
									x:Name="InnerBorder"
									Margin="1"
									Grid.RowSpan="2"
									Visibility="Visible" />
							<Border x:Name="Shadow"
									Margin="3"
									Grid.RowSpan="2">
								<Border.OpacityMask>
									<RadialGradientBrush>
										<RadialGradientBrush.RelativeTransform>
											<TransformGroup>
												<TranslateTransform X="0"
																	Y="-0.5" />
											</TransformGroup>
										</RadialGradientBrush.RelativeTransform>
										<GradientStop Color="#00FFFFFF"
													  Offset="0.3" />
										<GradientStop Color="#FFFFFFFF"
													  Offset="1" />
									</RadialGradientBrush>
								</Border.OpacityMask>
								<Border.Background>
									<RadialGradientBrush>
										<RadialGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform CenterX="0.5"
																CenterY="0.5"
																ScaleX="1.75"
																ScaleY="2.25" />
												<TranslateTransform Y="0.65" />
											</TransformGroup>
										</RadialGradientBrush.RelativeTransform>
										<GradientStop Color="#00000000"
													  Offset="0.55" />
										<GradientStop Color="#33000000"
													  Offset="1" />
									</RadialGradientBrush>
								</Border.Background>
							</Border>
							<Border Margin="1,1,1,0"
									CornerRadius="0,0,7,7"
									x:Name="Highlight"
									Opacity="0.8"
									RenderTransformOrigin="0.5,1">
								<Border.Background>
									<RadialGradientBrush>
										<RadialGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform CenterX="0.5"
																CenterY="0.5"
																ScaleX="1.25"
																ScaleY="2" />
												<TranslateTransform Y="-0.6" />
											</TransformGroup>
										</RadialGradientBrush.RelativeTransform>
										<GradientStop Color="#BFFFFFFF"
													  Offset="0" />
										<GradientStop Color="#4CFFFFFF"
													  Offset="1" />
									</RadialGradientBrush>
								</Border.Background>
							</Border>
							<Rectangle Stroke="{x:Null}"
									   StrokeThickness="0"
									   x:Name="IndeterminateRectangle"
									   Fill="{StaticResource TextBrush}"
									   Visibility="Collapsed"
									   Height="3"
									   Margin="4,4,4,4"
									   Grid.RowSpan="2"
									   RadiusX="1"
									   RadiusY="1" />
							<Grid Opacity="0.8"
								  Visibility="Collapsed"
								  x:Name="Bullet"
								  Margin="-0.25,-0.25,0,0"
								  RenderTransformOrigin="0.5,0.5"
								  HorizontalAlignment="Center"
								  VerticalAlignment="Center"
								  Grid.RowSpan="2">
								<Path Fill="{TemplateBinding Foreground}"
									  Data="M1.6045539,4.9657478 L3.9166667,6.7270508 L8.7999792,0.13644244 L10.335848,1.2280303 L4.1581869,9.0391064 L0.39386681,6.6038928 z"
									  Margin="1,-1,-1,0"
									  Stretch="Fill"
									  StrokeLineJoin="Miter"
									  StrokeMiterLimit="10"
									  VerticalAlignment="Stretch" />
							</Grid>
							<Border x:Name="ValidationErrorElement"
									Visibility="Collapsed"
									BorderBrush="#FFDB000C"
									BorderThickness="1"
									CornerRadius="7">
								--><!--<ToolTipService.ToolTip>
									<ToolTip x:Name="validationTooltip"
											 DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
											 Template="{StaticResource ValidationToolTipTemplate}"
											 Placement="Right"
											 PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
										<ToolTip.Triggers>
											<EventTrigger RoutedEvent="Canvas.Loaded">
												<BeginStoryboard>
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip"
																					   Storyboard.TargetProperty="IsHitTestVisible">
															<DiscreteObjectKeyFrame KeyTime="0">
																<DiscreteObjectKeyFrame.Value>
																	<system:Boolean>true</system:Boolean>
																</DiscreteObjectKeyFrame.Value>
															</DiscreteObjectKeyFrame>
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
												</BeginStoryboard>
											</EventTrigger>
										</ToolTip.Triggers>
									</ToolTip>
								</ToolTipService.ToolTip>--><!--
								<Grid Height="12"
									  HorizontalAlignment="Right"
									  Margin="1,-4,-4,0"
									  VerticalAlignment="Top"
									  Width="12"
									  Background="Transparent">
									<Path Fill="#FFDC000C"
										  Margin="1,3,0,0"
										  Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" />
									<Path Fill="#ffffff"
										  Margin="1,3,0,0"
										  Data="M 0,0 L2,0 L 8,6 L8,8" />
								</Grid>
							</Border>

						</Grid>
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  Margin="{TemplateBinding Padding}"
										  x:Name="contentPresenter"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  Grid.Column="1"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>-->

	<!--ValidationTooltipTemplate-->
	<ControlTemplate x:Key="ValidationToolTipTemplate">
		<Grid x:Name="Root"
			  Margin="5,0"
			  Opacity="0"
			  RenderTransformOrigin="0,0">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="OpenStates">
					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0" />
						<VisualTransition GeneratedDuration="0:0:0.2"
											  To="Open">
							<Storyboard>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="xform"
															   Storyboard.TargetProperty="X">
									<SplineDoubleKeyFrame KeyTime="0:0:0.2"
														  Value="0" />
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root"
															   Storyboard.TargetProperty="Opacity">
									<SplineDoubleKeyFrame KeyTime="0:0:0.2"
														  Value="1" />
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</VisualTransition>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Closed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root"
														   Storyboard.TargetProperty="Opacity">
								<SplineDoubleKeyFrame KeyTime="0"
													  Value="0" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Open">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="xform"
														   Storyboard.TargetProperty="X">
								<SplineDoubleKeyFrame KeyTime="0"
													  Value="0" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root"
														   Storyboard.TargetProperty="Opacity">
								<SplineDoubleKeyFrame KeyTime="0"
													  Value="1" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Grid.RenderTransform>
				<TranslateTransform x:Name="xform"
									X="-25" />
			</Grid.RenderTransform>
			<Border Margin="4,4,-4,-4"
					Background="#152A2E31"
					CornerRadius="4" />
			<Border Margin="3,3,-3,-3"
					Background="#252A2E31"
					CornerRadius="4" />
			<Border Margin="2,2,-2,-2"
					Background="#352A2E31"
					CornerRadius="4" />
			<Border Margin="1,1,-1,-1"
					Background="#452A2E31"
					CornerRadius="4" />
			<Border Background="#FFDC000C"
					CornerRadius="4" />
			<Border CornerRadius="4">
				<Border.Background>
					<LinearGradientBrush EndPoint="0.5,1"
										 StartPoint="0.5,0">
						<GradientStop Color="#66FFFFFF" />
						<GradientStop Color="#66000000"
									  Offset="1" />
						<GradientStop Color="#00E5E5E5"
									  Offset="0.1" />
						<GradientStop Color="#00161616"
									  Offset="0.9" />
					</LinearGradientBrush>
				</Border.Background>
				<TextBlock Margin="8,3,8,4"
						   MaxWidth="250"
						   UseLayoutRounding="false"
						   Foreground="White"
						   Text="{Binding Path=(Validation.Errors)[0].ErrorContent}"
						   TextWrapping="Wrap" />
			</Border>
		</Grid>
	</ControlTemplate>
</ResourceDictionary>